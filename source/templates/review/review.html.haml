---
layout: :layout_single
---
:ruby
  description = Nokogiri::HTML(first_paragraph(review.content)).text
  content_for(:inline_css, 'source/templates/review/review.scss')
  content_for(:title, "#{review.title_with_author} Book Review")
  content_for(:javascript, javascript_include_tag('load-covers.js', async: :async))

  review_content = lambda do |r|
    content = r.content
    grade = "<p><strong>Grade: #{r.grade}</strong>"

    md = markdown(content + grade)
    md.sub('<p>', "<p data-time=\"#{r.date.strftime('%b %-d, %Y')}\">")
  end

- content_for(:head) do
  %meta{ name: 'description', content: description }
  %meta{ property: 'og:title', content: "#{review.title_with_author} Book Review" }
  %meta{ property: 'og:url', content: "https://www.franksmovielog.com#{href_for_review(review)}" }
  %meta{ property: 'og:image', content: review.cover }
  %meta{ property: 'og:description', content: description }
  %meta{ name: 'twitter:card', content: 'summary_large_image' }
  %meta{ name: 'twitter:site', content: '@franksbooklog' }
  %meta{ name: 'twitter:title', content: "#{review.title_with_author} Book Review" }
  %meta{ name: 'twitter:description', content: description }
  %meta{ name: 'twitter:image', content: review.cover }

%article.review
  = partial('components/post_content/post_content') do
    .review-cover_wrap{ href: href_for_review(review) }
      .review-cover{ data: { cover: review.cover } }
        %img.review-cover_placeholder{ src: review.cover_placeholder }
        %noscript
          %img.cover-noscript{ src: review.cover }
    %h1.review-title
      = review.title
    .review-author
      by #{review.authors.map { |a| author_link(author: a) }.join(' & ')}

    = grade_to_image_tag(grade: review.grade, options: { class: 'review-grade' })

    = review_content.call(review)
    = partial('templates/review/review_meta', locals: { review: review })

:ruby
  authors = review.authors.map do |author|
    "\"author\": {\n" \
    "\t\"@type\":\"Person\",\n" \
    "\t\"name\":\"#{author.name}\",\n" \
    "\t\"sameAs\":\"#{author.url}\"\n" \
    "}"
  end.join("\n")

%script{ type: 'application/ld+json' }
  :plain
    {
      "@context":"http://schema.org",
      "@type":"Review",
      "author":{
        "@type":"Person",
        "name":"Frank Showalter",
        "sameAs":"https://www.frankshowalter.com"
      },
      "datePublished":"#{review.date.iso8601}",
      "description":"#{truncate(description, length: 200)}",
      "inLanguage":"en",
      "itemReviewed":{
        "@type":"Book",
        "name":"#{review.title}",
        "datePublished":"#{review.year_published}",
        "isbn":"#{review.isbn}",
        #{authors}
      },
      "publisher":{
        "@type":"Organization",
        "name":"Frank's Book Log",
        "sameAs":"#{Booklog.site_url}"
      },
      "reviewRating":{
        "@type":"Rating",
        "ratingValue": #{Booklog::ConvertGradeToNumber.call(grade: review.grade) / 3}
      }
    }

